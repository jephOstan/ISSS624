---
title: "In-class Exercise 2 - Case Study 1"
editor: visual
date: 29 Nov 2022
---

## CS1.1 OVERVIEW

Case study : Do functionally similar water points positively co-occur in Nigeria?

## CS1.2 R PACKAGE REQUIRED

Following are the packages require for this exercise :

-   pacman package : to install and load the following R packages into R environment.

-   **sf** package :

    -   *st_read( )* = import and save the shapefiles into simple feature data table.

-   **tidyverse** package :

    -   [**dplyr**](https://dplyr.tidyverse.org/):

        -   *filter( )* - extract water point records of Nigeria.

    -   [**readr**](https://readr.tidyverse.org/) :

        -   [*write_rds( )*](https://readr.tidyverse.org/reference/read_rds.html) - save the extracted sf data table into an output file in rds data format.

-   **tmap** package :

-   **spdep** package :

-   **funModeling** package :

```{r}
pacman::p_load(sf, tidyverse, tmap, spdep, funModeling)

```

<br>

## CS1.3 GEOSPATIAL DATA

### CS1.3.1 acquire data source

-   geo_export

-   nga_admbnda_adm2_osgof_20190417

### CS1.3.2 import water point geospatial data

import the water point geospatial data (i.e. geo_export) by using the code chunk below.

```{r}
#| eval: false
wp <- st_read(dsn = "/jephOstan/ISSS624/in-class_ex/in-class_ex2/data/geospatial",
              layer = "geo_export",
              crs = 4326) %>%
  filter(clean_coun == "Nigeria")
```

``` {.column-margin style="color: #9e6024; border-width: 3px;   border-style: solid;   border-color: #ebbd8f;"}

Avoid performing transformation 
if going to use st_intersects() 
in geoprocessing stage. This is 
because st_intersects() only 
works correctly if the geospatial 
data are in geographic coordinate 
system (i.e. wgs84)
```

"`write_rds()` of readr package is used to save the extracted sf data table (i.e. wp) into an output file in rds data format. The output file is called *wp_nga.rds* and it is saved in *geodata* sub-folder."

### CS1.3.3 write the water point data table into rds data format

```{r}
#| eval: false
write_rds(wp, "/jephOstan/ISSS624/in-class_ex/in-class_ex2/data/geospatial/wp_nga.rds")
```

### CS1.3.4 import Nigeria LGA boundary data

```{r}
#| eval: false
nga <- st_read(dsn = "/jephOstan/ISSS624/in-class_ex/in-class_ex2/data/geospatial",
               layer = "nga_admbnda_adm2_osgof_20190417",
               crs = 4326)
```

"`st_read()` of **sf** package is used to import *nga_admbnda_adm2_osgof_20190417* shapefile into R environment and save the imported geospatial data into simple feature data table.''

<br>

### CS1.3.5 data wrangling

#### cs1.3.5.1 recode NA values into string

In the code chunk below, `replace_na()` is used to recode all the *NA* values in *status_cle* field into *Unknown*.

```{r}
#| eval: false
wp_nga <- read_rds("/jephOstan/ISSS624/in-class_ex/in-class_ex2/data/geospatial/wp_nga.rds") %>%
  mutate(status_cle = replace_na(status_cle, "Unknown"))
```

#### cs1.3.5.2 conduct Exploratory Data Analysis (EDA)

In the code chunk below, `freq()` of **funModeling** package is used to display the distribution of *status_cle* field in *wp_nga*.

```{r}
#| eval: false
freq(data=wp_nga, 
     input = 'status_cle')

```

## CS1.4 WATER POINT DATA EXTRACTION

Extract the water point records by using classes in *status_cle* field.

### CS1.4.1 extract functional water point

```{r}
#| eval: false
wpt_functional <- wp_nga %>%
  filter(status_cle %in%
           c("Functional", 
             "Functional but not in use",
             "Functional but needs repair"))
```

```{r}
#| eval: false
freq(data=wpt_functional, 
     input = 'status_cle')
```

### CS1.4.2 extract non-functional water point

In the code chunk below, `filter()` of dplyr is used to select non-functional water points.

```{r}
#| eval: false
wpt_nonfunctional <- wp_nga %>%
  filter(status_cle %in%
           c("Abandoned/Decommissioned", 
             "Abandoned",
             "Non-Functional",
             "Non functional due to dry season",
             "Non-Functional due to dry season"))
```

```{r}
#| eval: false
freq(data=wpt_nonfunctional, 
     input = 'status_cle')
```

### CS1.4.3 extract water point with unknown class

In the code chunk below, `filter()` of dplyr is used to select water points with unknown status.

```{r}
#| eval: false
wpt_unknown <- wp_nga %>%
  filter(status_cle == "Unknown")
```

## CS1.5 PERFORMING POINT-IN-POLYGON COUNT

```{r}
#| eval: false
nga_wp <- nga %>% 
  mutate(`total wpt` = lengths(
    st_intersects(nga, wp_nga))) %>%
  mutate(`wpt functional` = lengths(
    st_intersects(nga, wpt_functional))) %>%
  mutate(`wpt non-functional` = lengths(
    st_intersects(nga, wpt_nonfunctional))) %>%
  mutate(`wpt unknown` = lengths(
    st_intersects(nga, wpt_unknown)))
```

## CS1.6 DERIVE & SAVE ANALYTICAL DATA TABLE

```{r}
#| eval: false
nga_wp <- nga_wp %>%
  mutate(pct_functional = `wpt functional`/`total wpt`) %>%
  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`)
```

Things to learn from the code chunk above:

-   `mutate()` of **dplyr** package is used to derive two fields namely *pct_functional* and *pct_non-functional*.

-   to keep the file size small, `select()` of **dplyr** is used to retain only field 3,4,9,10, 18,19,20,21,22,and 23.

Now, you have the tidy sf data table subsequent analysis. We will save the sf data table into rds format.

```{r}
#| eval: false
write_rds(nga_wp, "/jephOstan/ISSS624/in-class_ex/in-class_ex2/data/geospatial/nga_wp.rds")
```

## CS1.7 SPATIAL DISTRIBUTION OF WATER POINTS VISUALISATION

```{r}
nga_wp <- read_rds("/jephOstan/ISSS624/in-class_ex/in-class_ex2/data/geospatial/nga_wp.rds")
```

```{r}
total <- qtm(nga_wp, "total wpt") + tm_layout(legend.height = 0.3, legend.width = 0.3)
wp_functional <- qtm(nga_wp, "wpt functional") + tm_layout(legend.height = 0.3, legend.width = 0.3)
wp_nonfunctional <- qtm(nga_wp, "wpt non-functional") + tm_layout(legend.height = 0.3, legend.width = 0.3)
unknown <- qtm(nga_wp, "wpt unknown") + tm_layout(legend.height = 0.3, legend.width = 0.3)

tmap_arrange(total, wp_functional, wp_nonfunctional, unknown, asp=1.5, ncol=2)
```
