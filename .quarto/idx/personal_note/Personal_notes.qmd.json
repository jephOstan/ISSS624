{"title":"PN#Common Errors and Basic Concepts","markdown":{"yaml":{"title":"PN#Common Errors and Basic Concepts","editor":"visual","date":"19 Nov 2022"},"headingText":"COMMON ERRORS","containsRefs":false,"markdown":"\n\n\n1.  During importing geospatial data, the coordinate system of the source data was either missing (such as due to missing .proj for ESRI shapefile) or wrongly assigned during the importing process.\n\n2.  Input feature class contains less than 30 features.\n\n    \\>\\> produce low reliability results.\n\n3.  The input field in categorical attribute field.\n\n4.  Use WGS84, or even undefined.\n\n    \\>\\> Should always use projection based coordinates.\n\n<br>\n\n## CONCEPT NOTES FOR GEOCOMPUTATION WITH R\n\nFollowing notes are quoted from [Geocomputation with R](https://bookdown.org/robinlovelace/geocompr/spatial-class.html)\n\n1.  simple feature geometries (basic) \\> sfg - objects \\> sfc - 'list columns' of class \\> sf - (full objects)\n\n2.  `sfg` class :\n\n    2.1 - represents the different simple feature geometry types in R : point, linestring, polygon (and their 'multi' equivalents, such as multipoints) or geometry collection.\n\n    -   A point: `st_point()`\n\n    -   A linestring: `st_linestring()`\n\n    -   A polygon: `st_polygon()`\n\n    -   A multipoint: `st_multipoint()`\n\n    -   A multilinestring: `st_multilinestring()`\n\n    -   A multipolygon: `st_multipolygon()`\n\n    -   A geometry collection: `st_geometrycollection()`\n\n    2.2 - `sfg` objects can be created from three base R data types:\n\n    -   A numeric vector: a single point\n\n    -   A matrix: a set of points, where each row represents a point, a multipoint or linestring\n\n    -   A list: a collection of objects such as matrices, multilinestrings or geometry collections\n\n    *#further read-up is required*\n\n3.  `sfc` class :\n\n    3.1 - `sfc` is a list of `sfg` objects, which is additionally able to contain information about the coordinate reference system in use. For instance, to combine two simple features into one object with two features, we can use the `st_sfc()` function. This is important since `sfc` represents the geometry column in **sf** data frames\n\n    *#further read up is required*\n\n4.  `sf` represent a set of data by combining the attributes (`data.frame`) with the simple feature geometry column (`sfc`). They are created with `st_sf()` .\n\n    *#further read-up is required*\n\n5.  In geospatial analytics, it is very common for us to transform the original data from geographic coordinate system ( 0-360 range of decimal degree) to projected coordinate system.\n\n    \\>\\> geographic coordinate system is not appropriate if the analysis need to use distance or/and area measurements.\n\n6.  Shape objects can be vector or raster data\n\n    -   `sf` objects for vector data\n\n    -   `stars` objects for raster data\n\n        [In **tmap**, a shape object needs to be defined with the function `tm_shape()`. When multiple shape objects are used, each has to be defined in a separate `tm_shape()` call.](https://r-tmap.github.io/tmap-book/tmshape.html)\n\n            tm_shape(worldelevation) +\n              tm_raster(\"worldelevation.tif\", palette = terrain.colors(8)) +\n            tm_shape(worldvector) +\n              tm_borders() +\n            tm_shape(worldcities) +\n              tm_dots() +\n              tm_text(\"name\")\n\n        three shapes: `worldelevation` which is a `stars` object containing an attribute called `\"worldelevation.tif\"`, `worldvector` which is an `sf` object with country borders, and `worldcities`, which is an `sf` object that contains metropolitan areas of at least 20 million inhabitants.\n\n        Each `tm_shape()` function call is succeeded by one or more layer functions.\n\n        The order of the `tm_shape()` functions' calls is crucial. The first `tm_shape()`, known as the main shape, is not only shown below the following *shapes*, but also sets the projection and extent of the whole map.\n\n### Tobler's First law of Geography\n\n\" Everything is related to everything else, but near things are more related than distant things.\"\n\nFoundation of :\n\n-   spatial dependence\n\n-   spatial autocorrelation\n\n<br>\n\n## CODE REFERENCES\n\n| EPSG code                           | geodetic CRS | datum | ellipsoid     | area of use                      |\n|-------------------------------------|--------------|-------|---------------|----------------------------------|\n| [3414 - 4326](https://epsg.io/3414) | SVY21        | SVY21 | WGS 84 (4326) | Singapore - onshore and offshore |\n\n<br>\n\n## REFERENCES\n\n-   wiki.gis.com. Datum (geodesy) - http://wiki.gis.com/wiki/index.php/Datum\\_(geodesy)\n-   Chapter 4 Specifying Spatial Data - https://r-tmap.github.io/tmap-book/tmshape.html\n\n<br>\n\n## QUARTO QUICK REFERENCES\n\n-   HTML Theming - https://quarto.org/docs/output-formats/html-themes.html\n\n-   HTML Code Blocks - https://quarto.org/docs/output-formats/html-code.html\n\n-   HTML Options - https://quarto.org/docs/reference/formats/html.html\n\n-   Article Layout - https://quarto.org/docs/authoring/article-layout.html\n\n-   Tables - https://quarto.org/docs/authoring/tables.html\n\n-   reStructuredText Options - https://quarto.org/docs/reference/formats/rst.html\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"Personal_notes.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.189","editor":"visual","theme":"sandstone","title":"PN#Common Errors and Basic Concepts","date":"19 Nov 2022"},"extensions":{"book":{"multiFile":true}}}}}